// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(MoneyManagerContext))]
    partial class MoneyManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("DataAccess.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f3ee034-bb6e-4e89-a050-a3899e4fa0a8"),
                            Color = 2309453,
                            Name = "Transport",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("b5b2d8db-5558-4613-91d0-634167579424"),
                            Color = 2309453,
                            Name = "Taxi",
                            ParentCategoryId = new Guid("9f3ee034-bb6e-4e89-a050-a3899e4fa0a8"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("053ca69a-963a-44f6-8bad-3a488ee68951"),
                            Color = 2309453,
                            Name = "Bus",
                            ParentCategoryId = new Guid("9f3ee034-bb6e-4e89-a050-a3899e4fa0a8"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("f1126ef2-c701-4ad9-9cc6-80d3f1527f8a"),
                            Color = 2444109,
                            Name = "Food",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("44f728a8-fb90-4c18-879a-67fde42c654d"),
                            Color = 2309453,
                            Name = "Sweet",
                            ParentCategoryId = new Guid("f1126ef2-c701-4ad9-9cc6-80d3f1527f8a"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("d9b44a60-f7a1-4b53-90ca-ba2927c6b922"),
                            Color = 2309453,
                            Name = "Sweet",
                            ParentCategoryId = new Guid("44f728a8-fb90-4c18-879a-67fde42c654d"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("1ad92cde-b4e0-4f6c-be63-c60a57d4da53"),
                            Color = 2309453,
                            Name = "Dairy products",
                            ParentCategoryId = new Guid("f1126ef2-c701-4ad9-9cc6-80d3f1527f8a"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("e784cd63-c32b-4710-8308-5c4770f70518"),
                            Color = 2309453,
                            Name = "Milk",
                            ParentCategoryId = new Guid("1ad92cde-b4e0-4f6c-be63-c60a57d4da53"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("82d5eb50-e377-4f32-9e90-32107ff8de12"),
                            Color = 2309453,
                            Name = "Cheese",
                            ParentCategoryId = new Guid("1ad92cde-b4e0-4f6c-be63-c60a57d4da53"),
                            Type = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,3)");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2(7)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataAccess.Models.Asset", b =>
                {
                    b.HasOne("DataAccess.Models.User", "User")
                        .WithMany("Assets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Models.Category", b =>
                {
                    b.HasOne("DataAccess.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("DataAccess.Models.Transaction", b =>
                {
                    b.HasOne("DataAccess.Models.Asset", "Asset")
                        .WithMany("Transactions")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
